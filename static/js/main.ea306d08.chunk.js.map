{"version":3,"sources":["components/Comment/index.jsx","components/Post/index.jsx","routes/Home/index.jsx","routes/Posts/index.js","routes/MissingPage/index.js","App.js","index.js"],"names":["Comment","props","className","data-testid","name","email","body","Post","comments","this","length","forEach","com","push","id","to","title","React","Component","Home","state","posts","PostList","fetch","then","res","ok","json","data","setState","catch","err","alert","console","log","history","options","map","post","i","value","onChange","e","HandleClick","target","Posts","newComment","postId","URLSearchParams","window","location","search","get","GetPostData","GetCommentsData","url","URL","params","Object","keys","key","searchParams","append","preventDefault","method","response","temp","type","placeholder","LogInput","bind","classtype","onClick","AddComment","MissingPage","App","path","exact","component","from","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea306d08.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\n\nconst Comment = (props) => {\n    return (\n        <div className=\"comment\" data-testid=\"comment\">\n            <div className=\"comment-header\">\n                <h4 className=\"comment-title\">{props.name}</h4>\n                <span>{props.email}</span>\n            </div>\n            <p>{props.body}</p>\n        </div>\n    )\n}\n\nexport default Comment;","import React from 'react';\nimport './index.css';\nimport { Link } from 'react-router-dom';\nimport Comment from '../../components/Comment'\n\n\nexport default class Post extends React.Component {\n    constructor(props){\n        super(props);\n        this.props = props;\n    }\n\n    render(){\n        let comments = [];\n        \n        if (this.props.comments && this.props.comments.length > 0){\n            this.props.comments.forEach((com) => {\n                comments.push(\n                    <Comment \n                            key={com.id}\n                            body={com.body}\n                            name={com.name}\n                            email={com.email}\n                    />  \n                )\n                })\n        }\n        return(\n            <div className='post' data-testid=\"post\">\n                <Link to={`/posts?postId=${this.props.id}`}>\n                    <div className='post-header'> \n                        <h3>{this.props.title}</h3>\n                    </div>\n                    <p>{this.props.body}</p>\n                    <div className='comments-container'>\n                        {comments}\n                    </div>\n                </Link>\n            </div>\n        )\n    }\n\n};\n","import React from 'react';\nimport Post from '../../components/Post'\n\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts : [],\n        }\n    }\n\n    componentDidMount(){\n        this.PostList();\n    }\n    \n    PostList() {\n        fetch('https://jsonplaceholder.typicode.com/posts')\n            .then(res => {\n                if (res.ok)\n                return res.json();\n            })\n            .then(data => {\n                this.setState({posts : data})\n            })\n            .catch(err =>{\n                alert('Something went wrong. Please refresh the page.')\n                console.log(err);\n            })\n    }\n    \n    HandleClick(id){\n        this.props.history.push('/posts?postId=' + id);\n    }\n    \n    render() {\n        const posts = [];\n        const options =[];\n\n        this.state.posts.map((post, i) => {\n            posts.push(\n                    <Post \n                        key={i}\n                        id={post.id}\n                        body={post.body}\n                        title={post.title}\n                    />\n                )\n            options.push(\n                <option key={i} value={post.id}>{post.id}</option>\n                )\n        });\n\n        return (\n            <div>\n                <div>\n                    <div className='select-container'>\n                        <select\n                            value =''\n                            onChange={(e)=> {this.HandleClick(e.target.value)}}\n                        >\n                            <option value=''>Select a post</option>\n                            {options}\n                        </select>\n                    </div>\n                    \n                </div>\n                <div className='post-container'>\n                    {posts}\n                </div>\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport Post from '../../components/Post';\nimport { Link } from 'react-router-dom';\n\nexport default class Posts extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            post : {},\n            comments: [],\n            newComment : {\n                body: \"\",\n                name: \"\",\n                email: \"\",\n                id: \"\",\n                postId: \"\"\n            },\n            id : \"\",\n        }\n    }\n    \n    componentDidMount(){\n        const id = new URLSearchParams(window.location.search).get('postId');\n        this.setState({id: id})\n\n        this.GetPostData(id);\n        this.GetCommentsData(id);\n    }\n\n    GetPostData(id){\n        const url = new URL('https://jsonplaceholder.typicode.com/posts');\n        const params = {id: id}\n\n        Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n\n       fetch(url)\n        .then(res => {\n            if (res.ok)\n            return res.json()\n        })\n        .then(json =>{\n            this.setState({post: json[0]})\n        })\n        .catch(err => {\n            this.setState({post:null});\n            console.log(err);\n        })\n    }\n\n    GetCommentsData(id){\n        const url = new URL('https://jsonplaceholder.typicode.com/comments');\n        const params = {postId: id}\n\n        Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n\n        fetch(url)\n        .then(res => {\n            if(res.ok)\n            return res.json()\n        })\n        .then(json =>{\n            this.setState({comments: json})\n        })\n        .catch(err => {\n            this.setState({post:null});\n            console.log(err);\n        })\n    }\n\n    AddComment(e){\n        e.preventDefault();\n        if (this.state.newComment.body.length > 0 && this.state.newComment.name.length >0 && this.state.newComment.email.length > 0 ) {\n            return fetch('https://jsonplaceholder.typicode.com/comments', {method: 'POST'})\n            .then((response) => {\n                if (response.ok)\n                return response.json()\n            })\n            .then((data) => {\n                let temp = this.state.comments;\n                temp.push({\n                    id: data.id,\n                    body: this.state.newComment.body,\n                    postId : this.state.id,\n                    name: this.state.newComment.name,\n                    email: this.state.newComment.email,\n                });\n                this.setState({comments: temp})\n                this.setState({newComment: {\n                    body: \"\",\n                    name: \"\",\n                    email: \"\",\n                    id: \"\",\n                    postId: \"\"\n                    }\n                })\n            })\n            .catch((err) => {\n                alert('Something went wrong. Please try again.')\n                console.log(err);\n            })\n        }\n    }\n\n    LogInput(e){\n        const newComment = this.state.newComment;\n        let name = e.target.name;\n        newComment[name] = e.target.value;\n        this.setState({newComment : newComment});\n    }\n\n   render() {\n        if (this.state.post != null) {\n            return (\n                <div className='post-container'>\n                    <div className=\"back-button\">\n                        <Link to={'/'}>\n                            <p>Back</p>\n                        </Link>\n                    </div>\n                    <Post \n                        id={this.state.post.id}\n                        body={this.state.post.body}\n                        title={this.state.post.title}\n                        comments={this.state.comments}\n                    />\n                    <div className=\"input-container\">\n                        <form>\n                            <div className='pull-left'>\n                                <div className='input-row'>\n                                    <input data-testid=\"name-input\" type=\"text\" name=\"name\" value={this.state.newComment.name} placeholder=\"John Smith\" onChange={this.LogInput.bind(this)}/>\n                                    <input data-testid=\"email-input\" type=\"email\" name=\"email\" value={this.state.newComment.email} placeholder=\"email@email.com\" onChange={this.LogInput.bind(this)}/>\n                                </div>\n                                <div className='input-row'>\n                                    <input data-testid=\"comment-input\" type=\"text\" name=\"body\" value={this.state.newComment.body} placeholder=\"say something\" onChange={this.LogInput.bind(this)}/>\n                                </div>\n                            </div>\n                            <button data-testid=\"submitbtn\" classtype=\"submit\" onClick={this.AddComment.bind(this)}>+</button>\n                        </form>\n                    </div>\n                </div>\n            );\n        } else {\n            return(\n                <div className=\"container\">\n                    <h2>Invalid Post ID: {this.state.id}</h2>\n                    <Link to={'/'}>\n                        <h3>Go Home</h3>\n                    </Link>\n                </div>\n            )\n        }\n        \n    }\n   \n}\n","import { Link } from \"react-router-dom\"\n\nconst MissingPage = () => {\n    return(\n        <div className=\"container\">\n            <h1>404: Page Not Found</h1>\n            <Link to={'/'}>\n                <h3>Go Home</h3>\n            </Link>\n        </div>\n    )\n}\n\nexport default MissingPage;","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Home from './routes/Home';\nimport Posts from './routes/Posts';\nimport MissingPage from './routes/MissingPage'\n\nconst App = () => {\n    return(\n        <BrowserRouter >\n            <Switch>\n                <Route path='/posts-challenge/' exact component={Home} />\n                <Route path='/posts-challenge/posts' component={Posts} />\n                <Route path='/posts-challenge/404' component={MissingPage} />\n                <Redirect from='*' to='/404' />\n            </Switch>\n        </BrowserRouter>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}